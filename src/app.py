from ultralytics import YOLO  # YOLOv8
import cv2  # OpenCV
import yt_dlp  # Pour t√©l√©charger les vid√©os YouTube
import os  # Gestion des fichiers

#  Charger le mod√®le YOLO (remplace par ton mod√®le si besoin)
model = YOLO("yolov8n.pt")

#  Fonction pour r√©cup√©rer l'URL du stream YouTube
def get_youtube_stream_url(youtube_url):
    ydl_opts = {
        "format": "best[ext=mp4]",
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(youtube_url, download=False)
        return info["url"]

# üéõÔ∏è S√©lection de la source
print("\nChoisissez une source vid√©o:")
print("[1] Webcam")
print("[2] Vid√©o YouTube")
print("[3] Vid√©o locale")
print("[4] Image unique ou dossier d'images")

choice = input("Entrez le num√©ro correspondant : ")

if choice == "1":
    source = 0  # Webcam
elif choice == "2":
    youtube_url = input("Entrez l'URL YouTube : ")
    source = get_youtube_stream_url(youtube_url)  # R√©cup√©rer le flux
elif choice == "3":
    source = input("Entrez le chemin de la vid√©o locale : ")
elif choice == "4":
    source = input("Entrez le chemin du fichier image ou du dossier : ")
else:
    print(" Choix invalide, utilisation de la webcam par d√©faut.")
    source = 0

print(f"Source s√©lectionn√©e : {source}")

# üìå V√©rifier si c'est une image ou une vid√©o
if isinstance(source, str) and os.path.isfile(source) and source.lower().endswith(('.png', '.jpg', '.jpeg')):
    # üì∑ D√©tection sur une image unique
    results = model.predict(source=source, save=True, show=True)

elif isinstance(source, str) and os.path.isdir(source):
    # üìÇ D√©tection sur un dossier d‚Äôimages
    results = model.predict(source=source, save=True, show=True)

else:
    # üé• Traitement vid√©o (Webcam ou vid√©o)
    cap = cv2.VideoCapture(source)

    while cap.isOpened():
        success, frame = cap.read()
        if not success:
            break

        # Ex√©cuter YOLO sur chaque frame
        results = model.track(frame, persist=True)
        annotated_frame = results[0].plot()

        # üìå Affichage en temps r√©el
        cv2.imshow("YOLOv8 Tracking", annotated_frame)

        # Quitter avec 'q'
        if cv2.waitKey(1) & 0xFF == ord("q"):
            break

    cap.release()
    cv2.destroyAllWindows()

print(" D√©tection termin√©e !")
